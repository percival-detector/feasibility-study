# Database for configurator control using asyn driver and standard asyn device support
# gnx91527
# August 6, 2013

# Macros:
# % macro, P, Device Prefix
# % macro, R, Device Suffix
# % macro, PORT, Asyn Port name
# % macro, TIMEOUT, Timeout
# % macro, ADDR, Asyn Port address

# This associates the template with an edm screen
# % gui, $(PORT), edmtab, PercivalGenerator.edl, P=$(P),R=$(R)

###################################################################
#  This record contains the asyn port name of the configurator    #
###################################################################

# This makes the component icon reflect the severity
# % gui, $(PORT), sevr
record(stringin, "$(P)$(R)PortName_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PORT_NAME_SELF")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

###################################################################
#  This record controls the low level non-EPICS debug level       #
###################################################################

record(longout, "$(P)$(R)GDDebugLevel")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_DEBUG_LEVEL")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDDebugLevel_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_DEBUG_LEVEL")
   field(SCAN, "I/O Intr")
}

###################################################################
#  These records control the image size                           #
###################################################################

# % autosave 2 
record(longout, "$(P)$(R)ImageSizeX")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMAGE_SIZE_X")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)ImageSizeX_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMAGE_SIZE_X")
   field(SCAN, "I/O Intr")
}

# % autosave 2 
record(longout, "$(P)$(R)ImageSizeY")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMAGE_SIZE_Y")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)ImageSizeY_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMAGE_SIZE_Y")
   field(SCAN, "I/O Intr")
}

###################################################################
#  These records define the pattern repeat values                 #
###################################################################

# % autosave 2 
record(longout, "$(P)$(R)ImagePatternX")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMAGE_PATTERN_X")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)ImagePatternX_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMAGE_PATTERN_X")
   field(SCAN, "I/O Intr")
}

# % autosave 2 
record(longout, "$(P)$(R)ImagePatternY")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMAGE_PATTERN_Y")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)ImagePatternY_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMAGE_PATTERN_Y")
   field(SCAN, "I/O Intr")
}

###################################################################
#  This record defines the pattern type                           #
###################################################################

record(mbbo, "$(P)$(R)ImagePatternType")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMAGE_PATTERN_TYPE")
   field(ZRST, "Rectangle")
   field(ZRVL, "0")
   field(ONST, "Triangle")
   field(ONVL, "1")
   field(TWST, "Ellipse")
   field(TWVL, "2")
   field(VAL,  "0")
}

record(mbbi, "$(P)$(R)ImagePatternType_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMAGE_PATTERN_TYPE")
   field(ZRST, "Rectangle")
   field(ZRVL, "0")
   field(ONST, "Triangle")
   field(ONVL, "1")
   field(TWST, "Ellipse")
   field(TWVL, "2")
   field(SCAN, "I/O Intr")
}

###################################################################
#  This record defines the data type                              #
###################################################################

record(mbbi, "$(P)$(R)ImageDataType_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DATA_TYPE")
   field(ZRST, "UInt8")
   field(ZRVL, "0")
   field(ONST, "UInt16")
   field(ONVL, "1")
   field(TWST, "UInt32")
   field(TWVL, "2")
   field(SCAN, "I/O Intr")
}

###################################################################
#  This record defines the scramble type                          #
###################################################################

record(mbbo, "$(P)$(R)ImageScrambleType")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMAGE_SCRAMBLE_TYPE")
   field(ZRST, "Excalibur")
   field(ZRVL, "0")
   field(ONST, "Percival")
   field(ONVL, "1")
   field(VAL,  "0")
}

record(mbbi, "$(P)$(R)ImageScrambleType_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IMAGE_SCRAMBLE_TYPE")
   field(ZRST, "Excalibur")
   field(ZRVL, "0")
   field(ONST, "Percival")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}

###################################################################
#  These records define the raw image path and filename           #
###################################################################

record(stringin, "$(P)$(R)FilePath_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FILE_PATH")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)FilePath")
{
   field(DTYP, "asynOctetWrite")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FILE_PATH")
   field(FTVL, "CHAR")
   field(NELM, "256") 
}

record(stringin, "$(P)$(R)FileName_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FILE_NAME")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)FileName")
{
   field(DTYP, "asynOctetWrite")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FILE_NAME")
   field(FTVL, "CHAR")
   field(NELM, "256") 
}

record(longin, "$(P)$(R)FilePathExists_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FILE_PATH_EXISTS")
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)FullFileName_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FULL_FILE_NAME")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

###################################################################
#  These records provide status                                   #
###################################################################

record(stringin, "$(P)$(R)FileWriteMessage_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WRITE_MESSAGE")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

###################################################################
#  This record writes out the currently defined raw image         #
###################################################################

record(longout, "$(P)$(R)RawFileWrite")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RAW_FILE_WRITE")
   field(VAL,  "0")
}

###################################################################
#  This record reades the current file write status               #
###################################################################

record(longin, "$(P)$(R)FileWriteStatus_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WRITE_STATUS")
   field(SCAN, "I/O Intr")
}

###################################################################
#  This record reades the errors in file generation               #
###################################################################

record(longin, "$(P)$(R)FileErrorStatus_RBV")
{
#   field(DTYP, "asynInt32")
#   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))WRITE_STATUS")
#   field(SCAN, "I/O Intr")
   field(VAL,  "0")
}

###################################################################
#  These records define the physical layout of the detector       #
###################################################################

record(longin, "$(P)$(R)DPixelsPerChipX_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))D_PIXELS_PER_CHIP_X")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)DPixelsPerChipY_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))D_PIXELS_PER_CHIP_Y")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)DChipsPerBlockX_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))D_CHIPS_PER_BLOCK_X")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)DChipsPerBlockY_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))D_CHIPS_PER_BLOCK_Y")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)DBlocksPerStripeX_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))D_BLOCKS_PER_STRIPE_X")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)DBlocksPerStripeY_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))D_BLOCKS_PER_STRIPE_Y")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)DChipsPerStripeX_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))D_CHIPS_PER_STRIPE_X")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)DChipsPerStripeY_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))D_CHIPS_PER_STRIPE_Y")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)DStripesPerImageX_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))D_STRIPES_PER_IMAGE_X")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)DStripesPerImageY_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))D_STRIPES_PER_IMAGE_Y")
   field(SCAN, "I/O Intr")
}


###################################################################
#  These records define the addresses for the UDP send            #
###################################################################

#record(stringin, "$(P)$(R)Channel1Address_RBV")
#{
#   field(DTYP, "asynOctetRead")
#   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FILE_PATH")
#   field(VAL,  "Unknown")
#   field(SCAN, "I/O Intr")
#}

record(waveform, "$(P)$(R)Channel1Address")
{
#   field(DTYP, "asynOctetWrite")
#   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FILE_PATH")
   field(FTVL, "CHAR")
   field(NELM, "256") 
}

record(waveform, "$(P)$(R)Channel2Address")
{
#   field(DTYP, "asynOctetWrite")
#   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FILE_PATH")
   field(FTVL, "CHAR")
   field(NELM, "256") 
}

record(waveform, "$(P)$(R)Channel3Address")
{
#   field(DTYP, "asynOctetWrite")
#   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FILE_PATH")
   field(FTVL, "CHAR")
   field(NELM, "256") 
}

record(waveform, "$(P)$(R)Channel4Address")
{
#   field(DTYP, "asynOctetWrite")
#   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FILE_PATH")
   field(FTVL, "CHAR")
   field(NELM, "256") 
}

###################################################################
#  These records allow enabling/disabling each channel            #
###################################################################

record(mbbo, "$(P)$(R)Channel1Enable")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ENABLE_CHANNEL_1")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
   field(VAL,  "0")
}

record(mbbi, "$(P)$(R)Channel1Enable_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ENABLE_CHANNEL_1")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)Channel2Enable")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ENABLE_CHANNEL_2")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
   field(VAL,  "0")
}

record(mbbi, "$(P)$(R)Channel2Enable_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ENABLE_CHANNEL_2")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)Channel3Enable")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ENABLE_CHANNEL_3")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
   field(VAL,  "0")
}

record(mbbi, "$(P)$(R)Channel3Enable_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ENABLE_CHANNEL_3")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)Channel4Enable")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ENABLE_CHANNEL_4")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
   field(VAL,  "0")
}

record(mbbi, "$(P)$(R)Channel4Enable_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ENABLE_CHANNEL_4")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Enabled")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}

###################################################################
#  These records control the start/stop posting, frequency & qty  #
###################################################################

record(longout, "$(P)$(R)GDPostCommand")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_POST_COMMAND")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDPostCommand_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_POST_COMMAND")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)GDPostFrequency")
{
   field(PINI, "NO")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_POST_FREQUENCY")
   field(VAL,  "0.0")
}

record(ai, "$(P)$(R)GDPostFrequency_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_POST_FREQUENCY")
   field(SCAN, "I/O Intr")
}


###################################################################
#  These records provide the running state of individual channels #
###################################################################

record(longin, "$(P)$(R)GDPostChannel1_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_POST_CHANNEL_1")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDPostChannel2_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_POST_CHANNEL_2")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDPostChannel3_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_POST_CHANNEL_3")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDPostChannel4_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_POST_CHANNEL_4")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDCounterChannel1_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_COUNTER_CHANNEL_1")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDCounterChannel2_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_COUNTER_CHANNEL_2")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDCounterChannel3_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_COUNTER_CHANNEL_3")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDCounterChannel4_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_COUNTER_CHANNEL_4")
   field(SCAN, "I/O Intr")
}


###################################################################
#  These records setup the sub-frame for each channel             #
###################################################################

record(longout, "$(P)$(R)GDTopLeftXChannel1")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_X_CHANNEL_1")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDTopLeftXChannel1_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_X_CHANNEL_1")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDTopLeftXChannel2")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_X_CHANNEL_2")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDTopLeftXChannel2_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_X_CHANNEL_2")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDTopLeftXChannel3")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_X_CHANNEL_3")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDTopLeftXChannel3_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_X_CHANNEL_3")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDTopLeftXChannel4")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_X_CHANNEL_4")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDTopLeftXChannel4_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_X_CHANNEL_4")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDTopLeftYChannel1")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_Y_CHANNEL_1")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDTopLeftYChannel1_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_Y_CHANNEL_1")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDTopLeftYChannel2")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_Y_CHANNEL_2")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDTopLeftYChannel2_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_Y_CHANNEL_2")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDTopLeftYChannel3")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_Y_CHANNEL_3")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDTopLeftYChannel3_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_Y_CHANNEL_3")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDTopLeftYChannel4")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_Y_CHANNEL_4")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDTopLeftYChannel4_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_TOP_LEFT_Y_CHANNEL_4")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDBotRightXChannel1")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_X_CHANNEL_1")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDBotRightXChannel1_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_X_CHANNEL_1")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDBotRightXChannel2")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_X_CHANNEL_2")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDBotRightXChannel2_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_X_CHANNEL_2")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDBotRightXChannel3")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_X_CHANNEL_3")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDBotRightXChannel3_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_X_CHANNEL_3")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDBotRightXChannel4")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_X_CHANNEL_4")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDBotRightXChannel4_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_X_CHANNEL_4")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDBotRightYChannel1")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_Y_CHANNEL_1")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDBotRightYChannel1_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_Y_CHANNEL_1")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDBotRightYChannel2")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_Y_CHANNEL_2")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDBotRightYChannel2_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_Y_CHANNEL_2")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDBotRightYChannel3")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_Y_CHANNEL_3")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDBotRightYChannel3_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_Y_CHANNEL_3")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDBotRightYChannel4")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_Y_CHANNEL_4")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDBotRightYChannel4_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_BOT_RIGHT_Y_CHANNEL_4")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDWidthChannel1_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_WIDTH_CHANNEL_1")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDWidthChannel2_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_WIDTH_CHANNEL_2")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDWidthChannel3_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_WIDTH_CHANNEL_3")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDWidthChannel4_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_WIDTH_CHANNEL_4")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDHeightChannel1_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_HEIGHT_CHANNEL_1")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDHeightChannel2_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_HEIGHT_CHANNEL_2")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDHeightChannel3_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_HEIGHT_CHANNEL_3")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDHeightChannel4_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_HEIGHT_CHANNEL_4")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDSubFramesChannel1")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_SUB_FRAMES_CHANNEL_1")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDSubFramesChannel1_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_SUB_FRAMES_CHANNEL_1")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDSubFramesChannel2")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_SUB_FRAMES_CHANNEL_2")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDSubFramesChannel2_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_SUB_FRAMES_CHANNEL_2")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDSubFramesChannel3")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_SUB_FRAMES_CHANNEL_3")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDSubFramesChannel3_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_SUB_FRAMES_CHANNEL_3")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDSubFramesChannel4")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_SUB_FRAMES_CHANNEL_4")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDSubFramesChannel4_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_SUB_FRAMES_CHANNEL_4")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDPktSizeChannel1")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_PKT_SIZE_CHANNEL_1")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDPktSizeChannel1_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_PKT_SIZE_CHANNEL_1")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDPktSizeChannel2")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_PKT_SIZE_CHANNEL_2")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDPktSizeChannel2_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_PKT_SIZE_CHANNEL_2")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDPktSizeChannel3")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_PKT_SIZE_CHANNEL_3")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDPktSizeChannel3_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_PKT_SIZE_CHANNEL_3")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDPktSizeChannel4")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_PKT_SIZE_CHANNEL_4")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDPktSizeChannel4_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_PKT_SIZE_CHANNEL_4")
   field(SCAN, "I/O Intr")
}

###################################################################
#  These records setup the socket for each channel                #
###################################################################

record(stringout, "$(P)$(R)GDLocAddrChannel1")
{
   field(PINI, "NO")
   field(DTYP, "asynOctetWrite")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_ADDR_CHANNEL_1")
   field(VAL,  "")
}

record(stringin, "$(P)$(R)GDLocAddrChannel1_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_ADDR_CHANNEL_1")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

record(stringout, "$(P)$(R)GDLocAddrChannel2")
{
   field(PINI, "NO")
   field(DTYP, "asynOctetWrite")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_ADDR_CHANNEL_2")
   field(VAL,  "")
}

record(stringin, "$(P)$(R)GDLocAddrChannel2_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_ADDR_CHANNEL_2")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

record(stringout, "$(P)$(R)GDLocAddrChannel3")
{
   field(PINI, "NO")
   field(DTYP, "asynOctetWrite")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_ADDR_CHANNEL_3")
   field(VAL,  "")
}

record(stringin, "$(P)$(R)GDLocAddrChannel3_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_ADDR_CHANNEL_3")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

record(stringout, "$(P)$(R)GDLocAddrChannel4")
{
   field(PINI, "NO")
   field(DTYP, "asynOctetWrite")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_ADDR_CHANNEL_4")
   field(VAL,  "")
}

record(stringin, "$(P)$(R)GDLocAddrChannel4_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_ADDR_CHANNEL_4")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDLocPortChannel1")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_PORT_CHANNEL_1")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDLocPortChannel1_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_PORT_CHANNEL_1")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDLocPortChannel2")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_PORT_CHANNEL_2")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDLocPortChannel2_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_PORT_CHANNEL_2")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDLocPortChannel3")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_PORT_CHANNEL_3")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDLocPortChannel3_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_PORT_CHANNEL_3")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDLocPortChannel4")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_PORT_CHANNEL_4")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDLocPortChannel4_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_LOC_PORT_CHANNEL_4")
   field(SCAN, "I/O Intr")
}

record(stringout, "$(P)$(R)GDRemAddrChannel1")
{
   field(PINI, "NO")
   field(DTYP, "asynOctetWrite")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_ADDR_CHANNEL_1")
   field(VAL,  "")
}

record(stringin, "$(P)$(R)GDRemAddrChannel1_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_ADDR_CHANNEL_1")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

record(stringout, "$(P)$(R)GDRemAddrChannel2")
{
   field(PINI, "NO")
   field(DTYP, "asynOctetWrite")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_ADDR_CHANNEL_2")
   field(VAL,  "")
}

record(stringin, "$(P)$(R)GDRemAddrChannel2_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_ADDR_CHANNEL_2")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

record(stringout, "$(P)$(R)GDRemAddrChannel3")
{
   field(PINI, "NO")
   field(DTYP, "asynOctetWrite")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_ADDR_CHANNEL_3")
   field(VAL,  "")
}

record(stringin, "$(P)$(R)GDRemAddrChannel3_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_ADDR_CHANNEL_3")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

record(stringout, "$(P)$(R)GDRemAddrChannel4")
{
   field(PINI, "NO")
   field(DTYP, "asynOctetWrite")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_ADDR_CHANNEL_4")
   field(VAL,  "")
}

record(stringin, "$(P)$(R)GDRemAddrChannel4_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_ADDR_CHANNEL_4")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDRemPortChannel1")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_PORT_CHANNEL_1")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDRemPortChannel1_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_PORT_CHANNEL_1")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDRemPortChannel2")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_PORT_CHANNEL_2")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDRemPortChannel2_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_PORT_CHANNEL_2")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDRemPortChannel3")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_PORT_CHANNEL_3")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDRemPortChannel3_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_PORT_CHANNEL_3")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)GDRemPortChannel4")
{
   field(PINI, "NO")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_PORT_CHANNEL_4")
   field(VAL,  "0")
}

record(longin, "$(P)$(R)GDRemPortChannel4_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_REM_PORT_CHANNEL_4")
   field(SCAN, "I/O Intr")
}

###################################################################
#  These records provide error status for each channel            #
###################################################################

record(longin, "$(P)$(R)GDErrorChannel1_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ERROR_CHANNEL_1")
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)GDErrorMsgChannel1_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ERROR_MSG_CHANNEL_1")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDErrorChannel2_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ERROR_CHANNEL_2")
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)GDErrorMsgChannel2_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ERROR_MSG_CHANNEL_2")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDErrorChannel3_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ERROR_CHANNEL_3")
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)GDErrorMsgChannel3_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ERROR_MSG_CHANNEL_3")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)GDErrorChannel4_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ERROR_CHANNEL_4")
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)GDErrorMsgChannel4_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))GD_ERROR_MSG_CHANNEL_4")
   field(VAL,  "Unknown")
   field(SCAN, "I/O Intr")
}



